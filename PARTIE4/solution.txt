Analysons le fichier classes.csv obtenu à partir du code JFreeChart.Remarquons que le code à analyser représente une bibliothèque de graphiques. Chaque classe Java contient 30-40 lignes de commentaires avec des informations sur les droits d’auteurs et les mise à jours des classes. Si la classe est courte et inclut seulement quelques lignes du code, cela donne la valeur de la métrique classe_DC trop élevée. Alors, nous nous pouvons remarqué que la métrique classe_DC ne donne pas assez d’information pour tirer la conclusion.La métrique WMC nous indique le nombre et la complexité des méthodes d’une classe. Si la valuer est élevée, on considère que une classe est plus difficile à maintenir, réutiliser et étendre. La haute complexité d’une classe nécessite le nombre suffisant de commentaires qui décrivent les classes et les méthodes. Alors, la valeur importante de WMC demande la densité suffisante de commentaire par une classe.-----------Nous allons considÈrer que le code le moins bien commentÈ est le code avec la densitÈ de commentaires la plus faible, mais qui comporte quand mÍme une certaine complexitÈ. Par exemple, on aurait pu choisir la classe "module-info.java" mais comme elle n'est constituÈe que d'une liste de paquets, donc elle n'a pas de complexitÈ. Nous allons donc choisir les classes #2, #3 et #4#  chemin								classe						classe_LOC			classe_CLOC			classe_DC		WMC		classe_BC1  .\main\java\							module-info.java			40					3					0,075	0		0 		02  .\main\java\org\jfree\chart\axis\	NumberTickUnitSource.java	168					57					0,3392857		39		0,0086996333  .\main\java\org\jfree\chart\block\	BorderArrangement.java		382					130					0,34031415		71		0,0047931574  .\main\java\org\jfree\chart\swing\	CrosshairOverlay.java		399					173					0,43358395		75		0,005781119Pour ce qui est de la classe "NumberTickUnitSource", on voit que plusieurs mÈthodes n'ont pas de commentaires, c'est le cas par exemple de: NumberTickUnitSource, 